{"version":3,"sources":["ListViewCtrl.js"],"names":["cc","Class","extends","Component","properties","scrollView","default","type","ScrollView","spawnCount","totalCount","spacing","bufferZone","items","Array","start","onLoad","content","updateTimer","updateInterval","lastContentPosY","initialize","getPositionInView","item","worldPos","parent","convertToWorldSpaceAR","position","viewPos","node","convertToNodeSpaceAR","update","dt","scrollEvent","sender","event","pushToList","height","log","y","x","push","width","Math","abs","addChild","removeItem","scrollToFixedPosition","scrollToOffset","p"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACAC,oBAAY;AACXC,qBAAS,IADE;AAEXC,kBAAMP,GAAGQ;AAFE,SALJ;AASRC,oBAAY,CATJ,EASO;AACfC,oBAAY,CAVJ,EAUO;AACfC,iBAAS,CAXD,EAWI;AACZC,oBAAY,CAZJ,EAYO;AACfC,eAAO,IAAIC,KAAJ;AAbC,KAHP;AAkBLC,SAlBK,mBAkBE;AACH,aAAKF,KAAL,GAAa,EAAb,CADG,CACc;AACpB,KApBI;;AAqBL;AACAG,YAAQ,kBAAY;AACnB,aAAKC,OAAL,GAAe,KAAKZ,UAAL,CAAgBY,OAA/B;AACG,aAAKC,WAAL,GAAmB,CAAnB;AACA,aAAKC,cAAL,GAAsB,GAAtB;AACA,aAAKC,eAAL,GAAuB,CAAvB;AACA,aAAKC,UAAL;AACH,KA5BI;;AA8BLA,gBAAY,sBAAY;AACxB;AACA;AACA;AACA;AACA;AACC,KApCI;;AAsCLC,uBAAmB,2BAAUC,IAAV,EAAgB;AAAE;AACjC,YAAIC,WAAWD,KAAKE,MAAL,CAAYC,qBAAZ,CAAkCH,KAAKI,QAAvC,CAAf;AACA,YAAIC,UAAU,KAAKvB,UAAL,CAAgBwB,IAAhB,CAAqBC,oBAArB,CAA0CN,QAA1C,CAAd;AACA,eAAOI,OAAP;AACH,KA1CI;;AA4CLG,YAAQ,gBAASC,EAAT,EAAa,CAEpB,CA9CI;;AAgDLC,iBAAa,qBAASC,MAAT,EAAiBC,KAAjB,EAAwB;AACjC,gBAAOA,KAAP;AACI,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AACH,iBAAK,CAAL;;AAEG;AA9BP;AAgCH,KAjFI;;AAmFL;AACAC,gBAAY,oBAASb,IAAT,EAAc;AACtB,YAAIc,SAASd,KAAKc,MAAL,GAAc,KAAK1B,OAAhC;AACAX,WAAGsC,GAAH,CAAO,kBAAP,EAA0BD,MAA1B;AACAd,aAAKgB,CAAL,GAAS,KAAKnB,eAAL,GAAuB,KAAKT,OAA5B,GAAsCY,KAAKc,MAAL,GAAY,CAA3D;AACAd,aAAKiB,CAAL,GAAS,CAAT,CAJsB,CAIZ;AACV,aAAKpB,eAAL,IAAwBiB,MAAxB;AACA,aAAKxB,KAAL,CAAW4B,IAAX,CAAgBlB,IAAhB;AACA,aAAKN,OAAL,CAAayB,KAAb,GAAqBnB,KAAKmB,KAA1B;AACA,YAAGC,KAAKC,GAAL,CAAS,KAAKxB,eAAd,IAAiC,KAAKH,OAAL,CAAaoB,MAAjD,EACA;AACI,iBAAKpB,OAAL,CAAaoB,MAAb,IAAuBA,MAAvB;AACH;AACDrC,WAAGsC,GAAH,CAAO,KAAKrB,OAAL,CAAaoB,MAApB;AACA,aAAKpB,OAAL,CAAa4B,QAAb,CAAsBtB,IAAtB;AACH,KAlGI;;AAoGLuB,gBAAY,sBAAW,CAEtB,CAtGI;;AAwGLC,2BAAuB,iCAAY;AAC/B,aAAK1C,UAAL,CAAgB2C,cAAhB,CAA+BhD,GAAGiD,CAAH,CAAK,CAAL,EAAQ,GAAR,CAA/B,EAA6C,CAA7C;AACH;AA1GI,CAAT","file":"ListViewCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\listview","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // itemTemplate: { // item template to instantiate other items\n        //     default: null,\n        //     type: cc.Node\n        // },\n        scrollView: {\n        \tdefault: null,\n        \ttype: cc.ScrollView\n        },\n        spawnCount: 0, // how many items we actually spawn\n        totalCount: 0, // how many items we need for the whole list\n        spacing: 0, // space between each item\n        bufferZone: 0, // when item is away from bufferZone, we relocate it\n        items: new Array(),\n    },\n    start(){\n        this.items = []; // array to store spawned items\n    },\n    // use this for initialization\n    onLoad: function () {\n    \tthis.content = this.scrollView.content;\n        this.updateTimer = 0;\n        this.updateInterval = 0.2;\n        this.lastContentPosY = 0;\n        this.initialize();\n    },\n\n    initialize: function () {\n    //   var item = cc.instantiate(this.itemTemplate)\n    //   item.x = 0\n    //   item.y = 0\n    //   cc.log(\"添加一个item\")\n    //   this.pushToList(item)\n    },\n\n    getPositionInView: function (item) { // get item position in scrollview's node space\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    },\n\n    update: function(dt) {\n        \n    },\n\n    scrollEvent: function(sender, event) {\n        switch(event) {\n            case 0: \n               \n               break;\n            case 1: \n               \n               break;\n            case 2: \n               \n               break;\n            case 3: \n                \n               break;\n            case 4: \n               \n               break;\n            case 5: \n               \n               break;\n            case 6: \n               \n               break;\n            case 7: \n               \n               break;\n            case 8: \n               \n               break;\n            case 9: \n               \n               break;\n        }\n    },\n\n    //item is node\n    pushToList: function(item){\n        var height = item.height + this.spacing;\n        cc.log(\"item.height = %s\",height)\n        item.y = this.lastContentPosY - this.spacing - item.height/2;\n        item.x = 0//this.content.width/2\n        this.lastContentPosY -= height;\n        this.items.push(item);\n        this.content.width = item.width\n        if(Math.abs(this.lastContentPosY) > this.content.height )\n        {\n            this.content.height += height\n        }\n        cc.log(this.content.height)\n        this.content.addChild(item)\n    },\n\n    removeItem: function() {\n        \n    },\n\n    scrollToFixedPosition: function () {\n        this.scrollView.scrollToOffset(cc.p(0, 500), 2);\n    }\n});\n"]}